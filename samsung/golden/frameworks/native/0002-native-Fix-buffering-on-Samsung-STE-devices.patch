From db9582d7cc90a7f50f6ee44a6cfccb885ee30787 Mon Sep 17 00:00:00 2001
From: C457 <android.c357@gmail.com>
Date: Thu, 27 Mar 2014 09:40:20 -0500
Subject: [PATCH 2/2] native:Fix buffering on Samsung STE devices

@marcin1147

We need to define the number of framebuffers this
way we eliminate any rip or screen tearing that
might occur.

Change-Id: I01e29fc05969ab11c6790433a6ccb7fa7ce4658b
---
 include/ui/FramebufferNativeWindow.h |    8 ++++++++
 libs/ui/FramebufferNativeWindow.cpp  |    8 ++++++++
 2 files changed, 16 insertions(+)

diff --git a/include/ui/FramebufferNativeWindow.h b/include/ui/FramebufferNativeWindow.h
index 5ec738f..22bbf67 100644
--- a/include/ui/FramebufferNativeWindow.h
+++ b/include/ui/FramebufferNativeWindow.h
@@ -28,8 +28,12 @@
 #include <ui/ANativeObjectBase.h>
 #include <ui/Rect.h>
 
+#ifdef STE_SAMSUNG_HARDWARE
+#define NUM_FRAME_BUFFERS 3
+#else
 #define MIN_NUM_FRAME_BUFFERS  2
 #define MAX_NUM_FRAME_BUFFERS  3
+#endif
 
 extern "C" EGLNativeWindowType android_createDisplaySurface(void);
 
@@ -78,7 +82,11 @@ private:
     framebuffer_device_t* fbDev;
     alloc_device_t* grDev;
 
+#ifdef STE_SAMSUNG_HARDWARE
+    sp<NativeBuffer> buffers[NUM_FRAME_BUFFERS];
+#else
     sp<NativeBuffer> buffers[MAX_NUM_FRAME_BUFFERS];
+#endif
     sp<NativeBuffer> front;
     
     mutable Mutex mutex;
diff --git a/libs/ui/FramebufferNativeWindow.cpp b/libs/ui/FramebufferNativeWindow.cpp
index 31a69b2..7b144b1 100644
--- a/libs/ui/FramebufferNativeWindow.cpp
+++ b/libs/ui/FramebufferNativeWindow.cpp
@@ -93,12 +93,16 @@ FramebufferNativeWindow::FramebufferNativeWindow()
         mUpdateOnDemand = (fbDev->setUpdateRect != 0);
         
         // initialize the buffer FIFO
+#ifdef STE_SAMSUNG_HARDWARE
+        mNumBuffers = NUM_FRAME_BUFFERS;
+#else
         if(fbDev->numFramebuffers >= MIN_NUM_FRAME_BUFFERS &&
            fbDev->numFramebuffers <= MAX_NUM_FRAME_BUFFERS){
             mNumBuffers = fbDev->numFramebuffers;
         } else {
             mNumBuffers = MIN_NUM_FRAME_BUFFERS;
         }
+#endif
         mNumFreeBuffers = mNumBuffers;
         mBufferHead = mNumBuffers-1;
 
@@ -244,7 +248,11 @@ int FramebufferNativeWindow::dequeueBuffer(ANativeWindow* window,
         self->mBufferHead = 0;
 
     // wait for a free non-front buffer
+#ifdef STE_SAMSUNG_HARDWARE
+    while (self->mNumFreeBuffers < NUM_FRAME_BUFFERS) {
+#else
     while (self->mNumFreeBuffers < 2) {
+#endif
         self->mCondition.wait(self->mutex);
     }
     ALOG_ASSERT(self->buffers[index] != self->front);
-- 
1.7.9.5

