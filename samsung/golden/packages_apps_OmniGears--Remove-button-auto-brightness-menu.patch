From 1d353ea1e6eac4a1c74b4c2931cc9950d8d7a9e0 Mon Sep 17 00:00:00 2001
From: Stefan Berger <s.berger81@gmail.com>
Date: Fri, 3 Oct 2014 00:00:42 +0200
Subject: [PATCH] Remove button auto-brightness menu

Change-Id: I9f5bb6e8bd1507f173d0b2d8158ce528df4c5093
---
 res/xml/button_brightness_settings.xml             |    3 ++-
 .../brightness/ButtonBrightnessSettings.java       |   19 ++++++++++++-------
 2 files changed, 14 insertions(+), 8 deletions(-)

diff --git a/res/xml/button_brightness_settings.xml b/res/xml/button_brightness_settings.xml
index 60d0095..931ee03 100644
--- a/res/xml/button_brightness_settings.xml
+++ b/res/xml/button_brightness_settings.xml
@@ -18,11 +18,12 @@
 <PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
         android:title="@string/button_brightness_title"
         xmlns:settings="http://schemas.android.com/apk/res/com.android.settings">
-
+	<!--
         <Preference
                 android:key="button_auto_brightness"
                 android:title="@string/button_auto_brightness"
                 android:summary="@string/button_auto_brighness_summary"/>
+	-->
         <Preference
                 android:key="button_manual_brightness"
                 android:title="@string/button_manual_brightness"
diff --git a/src/org/omnirom/omnigears/brightness/ButtonBrightnessSettings.java b/src/org/omnirom/omnigears/brightness/ButtonBrightnessSettings.java
index 1948fc9..05f5754 100644
--- a/src/org/omnirom/omnigears/brightness/ButtonBrightnessSettings.java
+++ b/src/org/omnirom/omnigears/brightness/ButtonBrightnessSettings.java
@@ -54,13 +54,13 @@ public class ButtonBrightnessSettings extends SettingsPreferenceFragment impleme
 
     private static final String KEY_BUTTON_NO_BRIGHTNESS = "button_no_brightness";
     private static final String KEY_BUTTON_LINK_BRIGHTNESS = "button_link_brightness";
-    private static final String KEY_BUTTON_AUTO_BRIGHTNESS = "button_auto_brightness";
+    //private static final String KEY_BUTTON_AUTO_BRIGHTNESS = "button_auto_brightness";
     private static final String KEY_BUTTON_MANUAL_BRIGHTNESS = "button_manual_brightness";
     private static final String KEY_BUTTON_TIMEOUT = "button_timeout";
 
     private CheckBoxPreference mNoButtonBrightness;
     private CheckBoxPreference mLinkButtonBrightness;
-    private Preference mAutomaticButtonBrightness;
+    //private Preference mAutomaticButtonBrightness;
     private Preference mManualButtonBrightness;
     private AutoBrightnessDialog mButtonBrightnessDialog;
     private ManualButtonBrightnessDialog mManualBrightnessDialog;
@@ -82,7 +82,7 @@ public class ButtonBrightnessSettings extends SettingsPreferenceFragment impleme
         mLinkButtonBrightness.setChecked(Settings.System.getInt(resolver,
                 Settings.System.CUSTOM_BUTTON_USE_SCREEN_BRIGHTNESS, 0) != 0);
 
-        mAutomaticButtonBrightness = (Preference) findPreference(KEY_BUTTON_AUTO_BRIGHTNESS);
+        //mAutomaticButtonBrightness = (Preference) findPreference(KEY_BUTTON_AUTO_BRIGHTNESS);
         mManualButtonBrightness = (Preference) findPreference(KEY_BUTTON_MANUAL_BRIGHTNESS);
 
         mButtonTimoutBar = (SeekBarPreference) findPreference(KEY_BUTTON_TIMEOUT);
@@ -100,17 +100,17 @@ public class ButtonBrightnessSettings extends SettingsPreferenceFragment impleme
         if (mNoButtonBrightness.isChecked()){
             mLinkButtonBrightness.setEnabled(false);
             mButtonTimoutBar.setEnabled(false);
-            mAutomaticButtonBrightness.setEnabled(false);
+            //mAutomaticButtonBrightness.setEnabled(false);
             mManualButtonBrightness.setEnabled(false);
         } else if (mLinkButtonBrightness.isChecked()){
             mNoButtonBrightness.setEnabled(false);
-            mAutomaticButtonBrightness.setEnabled(false);
+            //mAutomaticButtonBrightness.setEnabled(false);
             mManualButtonBrightness.setEnabled(false);
         } else {
             mNoButtonBrightness.setEnabled(true);
             mLinkButtonBrightness.setEnabled(true);
             mButtonTimoutBar.setEnabled(true);
-            mAutomaticButtonBrightness.setEnabled(true);
+            //mAutomaticButtonBrightness.setEnabled(true);
             mManualButtonBrightness.setEnabled(true);
         }
     }
@@ -134,10 +134,13 @@ public class ButtonBrightnessSettings extends SettingsPreferenceFragment impleme
 
     @Override
     public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {
+	/*
         if (preference == mAutomaticButtonBrightness) {
             showButtonAutoBrightnessDialog();
             return true;
-        } else if (preference == mManualButtonBrightness) {
+        } 
+	*/
+	if (preference == mManualButtonBrightness) {
             showButtonManualBrightnessDialog();
             return true;
         } else if (preference == mNoButtonBrightness) {
@@ -170,6 +173,7 @@ public class ButtonBrightnessSettings extends SettingsPreferenceFragment impleme
         return true;
     }
 
+    /**
     private void showButtonAutoBrightnessDialog() {
         if (mButtonBrightnessDialog != null && mButtonBrightnessDialog.isShowing()) {
             return;
@@ -178,6 +182,7 @@ public class ButtonBrightnessSettings extends SettingsPreferenceFragment impleme
         mButtonBrightnessDialog = new AutoBrightnessDialog(getActivity(), false);
         mButtonBrightnessDialog.show();
     }
+    */
 
     private void showButtonManualBrightnessDialog() {
         if (mManualBrightnessDialog != null && mManualBrightnessDialog.isShowing()) {
-- 
1.7.9.5

