From e74f4e473b71a790303f180af1139e593a5dde2b Mon Sep 17 00:00:00 2001
From: Konsta <konsta09@gmail.com>
Date: Sun, 4 Jan 2015 10:26:46 +0100
Subject: [PATCH] camera: allow device to append camera parameters

Overload using include/camera/CameraParametersExtra.h in device
tree to add device specific camera parameters.

Change-Id: Ibd8fcfda3480c917d8fa448afac5583306fc58dc
---
 camera/CameraParameters.cpp                        |   21 ++----------
 include/camera/CameraParameters.h                  |   25 +++-----------
 include/camera/CameraParametersExtra.h             |   35 ++++++++++++++++++++
 .../device1/CameraHardwareInterface.h              |    3 ++
 4 files changed, 44 insertions(+), 40 deletions(-)
 create mode 100644 include/camera/CameraParametersExtra.h

diff --git a/camera/CameraParameters.cpp b/camera/CameraParameters.cpp
index d114b94..a7bf353 100644
--- a/camera/CameraParameters.cpp
+++ b/camera/CameraParameters.cpp
@@ -148,26 +148,11 @@ const char CameraParameters::SCENE_MODE_FIREWORKS[] = "fireworks";
 const char CameraParameters::SCENE_MODE_SPORTS[] = "sports";
 const char CameraParameters::SCENE_MODE_PARTY[] = "party";
 const char CameraParameters::SCENE_MODE_CANDLELIGHT[] = "candlelight";
-#ifdef STE_SAMSUNG_HARDWARE
-const char CameraParameters::SCENE_MODE_AQUA[] = "aqua";
-const char CameraParameters::SCENE_MODE_BACKLIGHT[] = "backlight";
-const char CameraParameters::SCENE_MODE_DUSKDAWN[] = "duskdawn";
-const char CameraParameters::SCENE_MODE_FALLCOLOR[] = "fallcolor";
-const char CameraParameters::SCENE_MODE_TEXT[] = "text";
-#endif
 const char CameraParameters::SCENE_MODE_BARCODE[] = "barcode";
 const char CameraParameters::SCENE_MODE_HDR[] = "hdr";
 
 const char CameraParameters::PIXEL_FORMAT_YUV422SP[] = "yuv422sp";
 const char CameraParameters::PIXEL_FORMAT_YUV420SP[] = "yuv420sp";
-#ifdef STE_HARDWARE
-const char CameraParameters::PIXEL_FORMAT_YUV420SPNV12[] = "yuv420spnv12";
-const char CameraParameters::PIXEL_FORMAT_YUV420MB[] = "yuv420mb";
-const char CameraParameters::PIXEL_FORMAT_YVU422SP[] = "yvu422sp";
-const char CameraParameters::PIXEL_FORMAT_YVU422P[] = "yvu422p";
-const char CameraParameters::PIXEL_FORMAT_YVU420SP[] = "yvu420sp";
-const char CameraParameters::PIXEL_FORMAT_YVU420P[]  = "yvu420p";
-#endif
 const char CameraParameters::PIXEL_FORMAT_YUV422I[] = "yuv422i-yuyv";
 const char CameraParameters::PIXEL_FORMAT_YUV420P[]  = "yuv420p";
 const char CameraParameters::PIXEL_FORMAT_RGB565[] = "rgb565";
@@ -189,10 +174,8 @@ const char CameraParameters::FOCUS_MODE_CONTINUOUS_PICTURE[] = "continuous-pictu
 const char CameraParameters::LIGHTFX_LOWLIGHT[] = "low-light";
 const char CameraParameters::LIGHTFX_HDR[] = "high-dynamic-range";
 
-#ifdef STE_HARDWARE
-// keys for record stride and sliceheight
-const char CameraParameters::KEY_RECORD_STRIDE[] = "record-stride";
-const char CameraParameters::KEY_RECORD_SLICE_HEIGHT[] = "record-slice-height";
+#ifdef CAMERA_PARAMETERS_EXTRA_C
+CAMERA_PARAMETERS_EXTRA_C
 #endif
 
 CameraParameters::CameraParameters()
diff --git a/include/camera/CameraParameters.h b/include/camera/CameraParameters.h
index 07e0434..d6637da 100644
--- a/include/camera/CameraParameters.h
+++ b/include/camera/CameraParameters.h
@@ -601,13 +601,6 @@ public:
     static const char SCENE_MODE_SPORTS[];
     static const char SCENE_MODE_PARTY[];
     static const char SCENE_MODE_CANDLELIGHT[];
-#ifdef STE_SAMSUNG_HARDWARE
-    static const char SCENE_MODE_AQUA[];
-    static const char SCENE_MODE_BACKLIGHT[];
-    static const char SCENE_MODE_DUSKDAWN[];
-    static const char SCENE_MODE_FALLCOLOR[];
-    static const char SCENE_MODE_TEXT[];
-#endif
     // Applications are looking for a barcode. Camera driver will be optimized
     // for barcode reading.
     static const char SCENE_MODE_BARCODE[];
@@ -620,14 +613,6 @@ public:
     // and KEY_VIDEO_FRAME_FORMAT
     static const char PIXEL_FORMAT_YUV422SP[];
     static const char PIXEL_FORMAT_YUV420SP[]; // NV21
-#ifdef STE_HARDWARE
-    static const char PIXEL_FORMAT_YUV420SPNV12[]; // NV12
-    static const char PIXEL_FORMAT_YVU422SP[];
-    static const char PIXEL_FORMAT_YVU422P[];
-    static const char PIXEL_FORMAT_YVU420SP[];
-    static const char PIXEL_FORMAT_YVU420P[];
-    static const char PIXEL_FORMAT_YUV420MB[];
-#endif
     static const char PIXEL_FORMAT_YUV422I[]; // YUY2
     static const char PIXEL_FORMAT_YUV420P[]; // YV12
     static const char PIXEL_FORMAT_RGB565[];
@@ -696,6 +681,10 @@ public:
     // High-dynamic range mode
     static const char LIGHTFX_HDR[];
 
+#ifdef CAMERA_PARAMETERS_EXTRA_H
+CAMERA_PARAMETERS_EXTRA_H
+#endif
+
     /**
      * Returns the the supported preview formats as an enum given in graphics.h
      * corrsponding to the format given in the input string or -1 if no such
@@ -703,12 +692,6 @@ public:
      */
     static int previewFormatToEnum(const char* format);
 
-#ifdef STE_HARDWARE
-    // keys for record stride and slice height
-    static const char KEY_RECORD_STRIDE[];
-    static const char KEY_RECORD_SLICE_HEIGHT[];
-#endif
-
 private:
     DefaultKeyedVector<String8,String8>    mMap;
 };
diff --git a/include/camera/CameraParametersExtra.h b/include/camera/CameraParametersExtra.h
new file mode 100644
index 0000000..80a67cc
--- /dev/null
+++ b/include/camera/CameraParametersExtra.h
@@ -0,0 +1,35 @@
+// Overload this file in your device specific config if you need
+// to add extra camera parameters.
+// A typical file would look like this:
+/*
+ * Copyright (C) 2014 The CyanogenMod Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+/*
+#define CAMERA_PARAMETERS_EXTRA_C \
+const char CameraParameters::KEY_SUPPORTED_BURST_NUM[] = "supported-burst-num"; \
+const char CameraParameters::KEY_BURST_NUM[] = "burst-num"; \
+const char CameraParameters::KEY_SUPPORTED_HDR_MODES[] = "supported-hdr-modes"; \
+const char CameraParameters::KEY_HDR_MODE[] = "hdr-mode"; \
+const char CameraParameters::HDR_MODE_OFF[] = "hdr-mode-off"; \
+const char CameraParameters::HDR_MODE_HDR[] = "hdr-mode-hdr";
+
+#define CAMERA_PARAMETERS_EXTRA_H \
+    static const char KEY_SUPPORTED_BURST_NUM[]; \
+    static const char KEY_BURST_NUM[]; \
+    static const char KEY_SUPPORTED_HDR_MODES[]; \
+    static const char KEY_HDR_MODE[]; \
+    static const char HDR_MODE_OFF[]; \
+    static const char HDR_MODE_HDR[];
+*/
diff --git a/services/camera/libcameraservice/device1/CameraHardwareInterface.h b/services/camera/libcameraservice/device1/CameraHardwareInterface.h
index 6386838..1d296e4 100644
--- a/services/camera/libcameraservice/device1/CameraHardwareInterface.h
+++ b/services/camera/libcameraservice/device1/CameraHardwareInterface.h
@@ -655,6 +655,9 @@ private:
 
     static int __set_usage(struct preview_stream_ops* w, int usage)
     {
+#ifdef STE_HARDWARE
+        usage |= GRALLOC_USAGE_PRIVATE_0;
+#endif
         ANativeWindow *a = anw(w);
         return native_window_set_usage(a, usage);
     }
-- 
1.7.9.5

